#include<iostream>
using namespace std;
#define SIZE 4
int count,k;
int board[SIZE][SIZE];
struct{
	int r,c;
}q[SIZE];

bool checkRow(int r,int col){
	for(int i=0;i<col;i++){
		if(q[i].r==r){
			return true;
		}
	}
	return false;
}

bool checkDiagonalUp(int r,int c){
	int i=0;
	for(i=0;i<=r;i++){
		if(board[r-i][c-i]==1){
			return true;
		}
	}
	return false;
}

bool checkDiagonalDown(int r,int c){
        int i=0;
        for(i=0;i<=c;i++){
                if(board[r+i][c-i]==1){
                        return true;
                }
        }
        return false;
}

bool checkDiagonal(int r,int c){
	if(!checkDiagonalUp(r,c)){
		if(!checkDiagonalDown(r,c)){
            cout<<"\ntrue"<<r<<" "<<c<<endl;
			return false;
		}
	}
	return true;
}

void showData(){
    for(int i=0;i<SIZE;i++){
        for(int j=0;j<SIZE;j++)
            cout<<board[i][j];
        cout<<endl;
    }
    cout<<endl;
}
bool placeQueens(int row,int col){

    if(col>4){
        return true;
    }
    else{
        int i=row;
        while(i<SIZE){
		if(!checkRow(i,col) && !checkDiagonal(i,col)){
                board[i][col]=1;
                showData();
                q[count].r=i,q[count].c=col;
                count+=1;
                if(placeQueens(0,col+1)){
                    cout<<"row : "<<i<<" col : "<<col<<endl;
                    
return true;
                }
                count-=1;
                board[i][col]=0;
            }
            i++;
        }
    }

    return false;
}

int main(){

	//start here
    // for(int i=0;i<SIZE;i++){
    //     for(int j=0;j<SIZE;j++)
    //         board[i][j]=-1;
    //     i++;
    // }
	placeQueens(0,0);
	return 0;
}
